# # This is a basic workflow to help you get started with Actions

# name: CI

# # Controls when the workflow will run
# on: [push, workflow_dispatch]

# jobs:
#   build:
#     permissions: write-all
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3

#       - name: Setup Gradle
#         uses: gradle/gradle-build-action@v2

#       - name: Make gradlew executable
#         run: chmod +x ./gradlew

#       - name: Execute Gradle build
#         run: ./gradlew build -x test

#      # - name: Tests
#      #  run: ./gradlew test 

#       - name: Generate Jacoco report
#         run: ./gradlew jacocoTestReport

#       - name: Upload JaCoCo Report
#         uses: actions/upload-artifact@v2
#         with:
#           name: jacoco-report
#           path: build/reports/jacoco/test/html/index.html

#   send-report:
#     needs: build
#     runs-on: ubuntu-latest

#     steps:
#       - name: Download JaCoCo Report
#         uses: actions/download-artifact@v2
#         with:
#           name: jacoco-report
#           path: /tmp/jacoco-report

#       - name: Install dependencies
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y curl jq

#       - name: Parse JaCoCo Report
#         id: parse-report
#         run: |
#           FAILED_TESTS=$(cat /tmp/jacoco-report/index.html | grep "class='failed'" | sed -n 's/.*href="\([^"]*\).*/\1/p')
#           if [ -z "$FAILED_TESTS" ]; then
#             echo "::set-output name=failed_tests::none"
#           else
#             echo "::set-output name=failed_tests::$FAILED_TESTS"
#           fi

#       - name: Send Message to Telegram
#         if: steps.parse-report.outputs.failed_tests != 'none'
#         run: |
#           TELEGRAM_BOT_TOKEN=<YOUR_BOT_TOKEN>
#           CHAT_ID=<YOUR_CHAT_ID>
#           FAILED_TESTS=${{ steps.parse-report.outputs.failed_tests }}
#           MESSAGE="Failed Tests:\n$FAILED_TESTS"
#           curl -s -X POST https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage -d "chat_id=$CHAT_ID" -d "parse_mode=HTML" -d "text=$MESSAGE"

#       - name: Send 'All is OK' Message to Telegram
#         if: steps.parse-report.outputs.failed_tests == 'none'
#         run: |
#           TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_TOKEN }}
#           CHAT_ID=${{ secrets.TELEGRAM_ID }}
#           MESSAGE="All is OK"
#           curl -s -X POST https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage -d "chat_id=$CHAT_ID" -d "text=$MESSAGE"


name: Run Tests and Notify on Failure
on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Run tests with Gradle
        run: ./gradlew test > test_output.txt

      - name: Check test results and send Telegram message
        if: ${{ failure() }}
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_ID }}
        run: |
          failed_tests=$(grep -i "failed" test_output.txt | grep -v "Exception" | awk '{print $1}')
          curl -s -X POST https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage -d text="Tests failed in the project. Failed tests: \n\n$failed_tests" -d chat_id=${TELEGRAM_CHAT_ID}

      - name: Check if all tests passed and send Telegram message
        if: ${{ success() }}
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_ID }}
        run: |
          curl -s -X POST https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage -d text="All tests passed in the project" -d chat_id=${TELEGRAM_CHAT_ID}
